{"version":3,"sources":["context.js","components/Header/Header.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/Main/Main.js","components/Footer/Footer.js","App.js","index.js"],"names":["Context","React","createContext","Header","useContext","addTodo","todoTitle","setTodoTitle","className","placeholder","onKeyPress","onChange","event","target","value","TodoItem","text","id","isDone","toggleTodo","removeTodo","type","checked","htmlFor","onClick","TodoList","todos","filter","filteredTodos","todo","map","key","Main","checkAll","Footer","clearCompleted","choseAction","item","length","href","App","useState","setTodos","setFilter","Provider","Date","now","result","every","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f41ffa82.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Context = React.createContext();\n","import React, { useContext } from 'react';\nimport { Context } from '../../context';\n\nfunction Header() {\n  const { addTodo, todoTitle, setTodoTitle } = useContext(Context);\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        onKeyPress={addTodo}\n        onChange={event => setTodoTitle(event.target.value)}\n        value={todoTitle}\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../context';\n\nfunction TodoItem({ text, id, isDone }) {\n  const { toggleTodo, removeTodo } = useContext(Context);\n\n  return (\n    <li>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          onChange={() => toggleTodo(id)}\n          checked={isDone}\n        />\n        <label htmlFor={id}>{text}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => {\n            removeTodo(id);\n          }}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  text: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  isDone: PropTypes.bool.isRequired,\n};\n\nexport default TodoItem;\n","import React, { useContext } from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { Context } from '../../context';\n\nfunction TodoList() {\n  const { todos, filter } = useContext(Context);\n  let filteredTodos = [];\n\n  if (filter === 'all') {\n    filteredTodos = todos;\n  }\n\n  if (filter === 'active') {\n    filteredTodos = todos.filter(todo => todo.isDone === false);\n  }\n\n  if (filter === 'completed') {\n    filteredTodos = todos.filter(todo => todo.isDone === true);\n  }\n\n  return (\n    <ul className=\"todo-list\">\n      {filteredTodos.map(todo => (\n        <TodoItem {...todo} key={todo.id} />\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import React, { useContext } from 'react';\nimport { Context } from '../../context';\nimport TodoList from '../TodoList/TodoList';\n\nfunction Main() {\n  const { checkAll, todos } = useContext(Context);\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onChange={checkAll}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      <TodoList todos={todos} />\n    </section>\n  );\n}\n\nexport default Main;\n","import React, { useContext } from 'react';\nimport { Context } from '../../context';\n\nfunction Footer() {\n  const { clearCompleted, todos, choseAction } = useContext(Context);\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${todos.filter(item => !item.isDone).length} items left`}\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className=\"selected\"\n            onClick={() => choseAction('all')}\n          >\n            All\n          </a>\n        </li>\n        <li>\n          <a href=\"#/active\" onClick={() => choseAction('active')}>Active</a>\n        </li>\n        <li>\n          <a\n            href=\"#/completed\"\n            onClick={() => choseAction('completed')}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={clearCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\nimport { Context } from './context';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [todoTitle, setTodoTitle] = useState('');\n\n  function addTodo(event) {\n    if (event.key === 'Enter' && todoTitle !== '') {\n      setTodos([\n        ...todos,\n        {\n          text: todoTitle,\n          id: Date.now(),\n          isDone: false,\n        },\n      ]);\n\n      setTodoTitle('');\n    }\n  }\n\n  function toggleTodo(id) {\n    setTodos(todos.map((todo) => {\n      const result = { ...todo };\n\n      if (result.id === id) {\n        result.isDone = !todo.isDone;\n      }\n\n      return result;\n    }));\n  }\n\n  function checkAll() {\n    if (todos.every(todo => todo.isDone === true)) {\n      setTodos(todos.map(todo => ({\n        ...todo,\n        isDone: false,\n      })));\n    } else {\n      setTodos(todos.map(todo => ({\n        ...todo,\n        isDone: true,\n      })));\n    }\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  function clearCompleted() {\n    setTodos(todos.filter(todo => todo.isDone === false));\n  }\n\n  function choseAction(action) {\n    setFilter(action);\n  }\n\n  return (\n    <Context.Provider value={{\n      addTodo,\n      setTodoTitle,\n      toggleTodo,\n      checkAll,\n      removeTodo,\n      clearCompleted,\n      choseAction,\n      todos,\n      todoTitle,\n      filter,\n    }}\n    >\n      <section className=\"todoapp\">\n        <Header />\n        <Main />\n        <Footer />\n      </section>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}